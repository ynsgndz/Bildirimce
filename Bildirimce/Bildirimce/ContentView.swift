//
//  ContentView.swift
//  Bildirimce
//
//  Created by Yunus GÃ¼ndÃ¼z on 7.09.2023.
//

import SwiftUI
import UserNotifications

struct ContentView: View {
    @State var button_text = "Bildirim al"
    @State var izinVerildimi = false
   
    let calendar = Calendar.current
    let currentDate = Date()

    let ingilizce_kelime = [
        "run", "jump", "eat", "swim", "sing", "dance", "sleep", "read", "write", "talk",
        "apple", "car", "book", "dog", "cat", "house", "tree", "flower", "friend", "computer",
        "quickly", "slowly", "loudly", "quietly", "often", "always", "never", "well", "badly", "carefully",
        "play", "work", "study", "listen", "speak", "think", "drive", "fly", "travel", "run",
        "pencil", "phone", "chair", "table", "shirt", "shoes", "hat", "glasses", "clock", "bag",
        "happily", "sadly", "angrily", "kindly", "suddenly", "calmly", "nervously", "cheerfully", "usually", "rarely",
        "ball", "bike", "train", "bus", "plane", "boat", "subway", "taxi", "library", "school",
        "today", "tomorrow", "yesterday", "morning", "afternoon", "evening", "night", "week", "month", "year",
        "breakfast", "lunch", "dinner", "water", "coffee", "tea", "juice", "milk", "soup", "bread",
        "happy", "sad", "angry", "kind", "sudden", "calm", "nervous", "cheerful", "usual", "rare"
    ]

  
    
    let turkce_anlam = [
        "koÅŸmak", "atlamak", "yemek", "yÃ¼zmek", "ÅŸarkÄ± sÃ¶ylemek", "dans etmek", "uyumak", "okumak", "yazmak", "konuÅŸmak",
        "elma", "araba", "kitap", "kÃ¶pek", "kedi", "ev", "aÄŸaÃ§", "Ã§iÃ§ek", "arkadaÅŸ", "bilgisayar",
        "hÄ±zlÄ±ca", "yavaÅŸÃ§a", "yÃ¼ksek sesle", "sessizce", "sÄ±k sÄ±k", "her zaman", "asla", "iyi", "kÃ¶tÃ¼", "dikkatli bir ÅŸekilde",
        "oynamak", "Ã§alÄ±ÅŸmak", "Ã§alÄ±ÅŸmak", "dinlemek", "konuÅŸmak", "dÃ¼ÅŸÃ¼nmek", "sÃ¼rmek", "uÃ§mak", "seyahat etmek", "koÅŸmak",
        "kalem", "telefon", "sandalye", "masa", "gÃ¶mlek", "ayakkabÄ±", "ÅŸapka", "gÃ¶zlÃ¼k", "saat", "Ã§anta",
        "mutlu bir ÅŸekilde", "Ã¼zgÃ¼n bir ÅŸekilde", "Ã¶fkeli bir ÅŸekilde", "nazik bir ÅŸekilde", "ani bir ÅŸekilde", "sakin bir ÅŸekilde", "sinirli bir ÅŸekilde", "neÅŸeli bir ÅŸekilde", "genellikle", "nadiren",
        "top", "bisiklet", "tren", "otobÃ¼s", "uÃ§ak", "tekne", "metro", "taksi", "kÃ¼tÃ¼phane", "okul",
        "bugÃ¼n", "yarÄ±n", "dÃ¼n", "sabah", "Ã¶ÄŸleden sonra", "akÅŸam", "gece", "hafta", "ay", "yÄ±l",
        "kahvaltÄ±", "Ã¶ÄŸle yemeÄŸi", "akÅŸam yemeÄŸi", "su", "kahve", "Ã§ay", "meyve suyu", "sÃ¼t", "Ã§orba", "ekmek",
        "mutlu", "Ã¼zgÃ¼n", "sinirli", "nazik", "ani", "sakin", "sinirli", "neÅŸeli", "sÄ±k", "nadiren"
    ]
    init() {
        UNUserNotificationCenter.current().requestAuthorization(options: [.alert,.badge,.sound]){ succes , error in
            if succes {
             
                print("Bildirim izni var")
            }else{
                print("Bildirim izni yok")
            }
            DispatchQueue.main.async {
                let app = UIApplication.shared
                app.applicationIconBadgeNumber = 0
            }
          
        }
        print(ingilizce_kelime.count)
        print(turkce_anlam.count)
    }
    var body: some View {
        VStack {
            Button(button_text){
                
                guard izinVerildimi else {
                    
                    return}
                let bildirim =  UNMutableNotificationContent()
                let soru1 = UNNotificationAction(identifier: "evet", title: "EVET", options: .foreground)
                let soru2 = UNNotificationAction(identifier: "hayir", title: "HAYIR", options: .foreground)
                let soru3 = UNNotificationAction(identifier: "kapat", title: "KAPAT", options: .destructive)
                
                let kategori = UNNotificationCategory(identifier: "kategori", actions: [soru1,soru2,soru3], intentIdentifiers: [], options: [])
                UNUserNotificationCenter.current().setNotificationCategories([kategori])
                
                
                
              
                var bugun = ( calendar.ordinality(of: .day, in: .year, for: currentDate)! - 251)
                
                bildirim.title = "HER GÃœN 1 Ä°NGÄ°LÄ°ZCE KELÄ°ME"
                bildirim.subtitle = ""
                bildirim.body = """
                                    ğŸ‡¬ğŸ‡§ \(ingilizce_kelime[bugun].capitalized)
                                    ğŸ‡¹ğŸ‡· \(turkce_anlam[bugun].capitalized)
                                    """
                bildirim.badge = 1
                bildirim.sound = UNNotificationSound.default
                bildirim.categoryIdentifier = "kategori"
                // zamansal tekrar
                var date = DateComponents()
              //  date.day = 1
              //  date.month = 1
              //  date.year = 2023
                date.hour = 11
               // date.minute = 6
                 //date.second = 5
                let tarih = UNCalendarNotificationTrigger(dateMatching: date, repeats: true)
            
                let zaman = UNTimeIntervalNotificationTrigger(timeInterval: 3, repeats: false) // 24 * 3600  = 24 saat sanirim
                let id = UNNotificationRequest(identifier: "kelime", content: bildirim, trigger: tarih)
                
                UNUserNotificationCenter.current().add(id)
                
                print("Butona tiklandi")
            }
           
        
            List(0..<( calendar.ordinality(of: .day, in: .year, for: currentDate)! - 250),id: \.self){ index in
               Text("\(ingilizce_kelime[index]): \(turkce_anlam[index])")
            }
        }
        .padding()
        .onAppear{
            UNUserNotificationCenter.current().requestAuthorization { (granted, error) in
                self.izinVerildimi = granted
                if izinVerildimi {
                    self.button_text = "Bildirim al"
                    print("Bildirim izni var")
                    
                     
                      
                }else{
                    print("Bildirim izni yok")
                    self.button_text = "Ayarlardan Bildirimlere izin vermeniz gerekmektedir"
                     
                }
            }
        }
    }
}

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}
extension AppDelegate:UNUserNotificationCenterDelegate{
    
    func userNotificationCenter(_ center: UNUserNotificationCenter, willPresent notification: UNNotification, withCompletionHandler completionHandler: @escaping (UNNotificationPresentationOptions) -> Void) {
        completionHandler([.banner,.sound,.badge])
    }
    
    func userNotificationCenter(_ center: UNUserNotificationCenter, didReceive response: UNNotificationResponse, withCompletionHandler completionHandler: @escaping () -> Void) {
        let app = UIApplication.shared
        if(app.applicationState == .active){
            print("Bildirime Uygulama aktifken tÄ±klandÄ±")
        }
        if(app.applicationState == .background){
            print("Bildirime Uygulama arkaplandayken tÄ±klandÄ±")
        }
        if(app.applicationState == .inactive){
            print("Bildirime Uygulama inaktifken tÄ±klandÄ±")
        }
        app.applicationIconBadgeNumber = 0
        
        
        if response.actionIdentifier == "evet"{
            print("Evet butonu secildi")
        }
        if response.actionIdentifier == "hayir"{
            print("hayir butonu secildi")
        }
        if response.actionIdentifier == "belki"{
            print("belki butonu secildi")
        }
        
        completionHandler()
        
    }
    
}


